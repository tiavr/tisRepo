local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
load("F:\\tisRepo\\COURS DISTANCIEL\\MSS\\TP.RData")
2 HISTOGRAMMES DANS LA MEME FENETRE
> par(mfrow=c(2,1))
TAILLE ET PAS DE L'HIST
> tailles.breaks <- seq(145, 205, 2)
CREATION DE l'HIST
> hist(d.f, col="pink", breaks=tailles.breaks)
> hist(d.h, col="darkblue", breaks=tailles.breaks)
RECUPERATION DES TAILLES HOMME ET FEMMES
d.h <- d.s[d.s$Sexe=="H", 2]
d.f <- d.s[d.s$Sexe=="F", 2]
REPRESENTATION QUANTILE 
> qqnorm(d.f, col="pink", pch=20)
> qqline(d.f, col="red")
> qqnorm(d.h, col="blue", pch=20)
> qqline(d.h, col="red")
> 
TEST DE SHAPIRO-WILK
shapiro.test(d.h) 
Hypothèse : les 2 distributions sont égales (femmes et loi normale)
p-value : Probabilité que la mesure soit due au hasard.
Pour les femmes : p-value < 0.05 donc elle ne suit pas une loi normale
Pour les hommes : p-value > 0.05
Test de student : 
Sert à comparer les moyennes
Mais la moyenne est paramètre d'une loi normale, or la distribution des femmes ne suit pas une loi normale.
> t.test(d.f, d.h, var.equal=T)
        Two Sample t-test
data:  d.f and d.h
t = -21.639, df = 406, p-value < 2.2e-16
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -15.13257 -12.61211
sample estimates:
mean of x mean of y 
 165.5755  179.4479 
 p-value < 0.05 (probabilité que l'écart entre les 2 populations soit due au hasard)
 Donc il est peu probable car p-value < 0.05.
Test var.test(d.h, d.f) : 
> var.test(d.h, d.f)
        F test to compare two variances
data:  d.h and d.f
F = 1.276, num df = 162, denom df = 244, p-value = 0.08541
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.9666089 1.6981920
sample estimates:
ratio of variances 
          1.276015 
les variances sont acceptablement homongenes
Test de wilcox :
wilcox.test(d.f, d.h)
C'est un test de rang : Il faut ranger dans l'ordre croissant les tailles puis on attribut des rangs de 1 a n à ces tailles.
      Wilcoxon rank sum test with continuity correction
data:  d.f and d.h
W = 2278.5, p-value < 2.2e-16
alternative hypothesis: true location shift is not equal to 0
on a p-value < 0.05
Donc peu probable que l'ecart des rang est du au hasard
Donc il y a un ecart des rangs significatifs entre les hommes et les femmes.
TEST UNILATERAL : 
On determine une hypothèse alternative qui se traduit en hypothèse d'égalité.
Hyp1 : MoyF < MoyH --> ce que je veux montrer
Hyp0 : 
Exemple : t.test(d.f, d.h, var.equal=T, alternative="less")
2 HISTOGRAMMES DANS LA MEME FENETRE
> par(mfrow=c(2,1))
TAILLE ET PAS DE L'HIST
> tailles.breaks <- seq(145, 205, 2)
CREATION DE l'HIST
> hist(d.f, col="pink", breaks=tailles.breaks)
> hist(d.h, col="darkblue", breaks=tailles.breaks)
RECUPERATION DES TAILLES HOMME ET FEMMES
d.h <- d.s[d.s$Sexe=="H", 2]
d.f <- d.s[d.s$Sexe=="F", 2]
REPRESENTATION QUANTILE 
> qqnorm(d.f, col="pink", pch=20)
> qqline(d.f, col="red")
> qqnorm(d.h, col="blue", pch=20)
> qqline(d.h, col="red")
> 
TEST DE SHAPIRO-WILK
shapiro.test(d.h) 
Hypothèse : les 2 distributions sont égales (femmes et loi normale)
p-value : Probabilité que la mesure soit due au hasard.
Pour les femmes : p-value < 0.05 donc elle ne suit pas une loi normale
Pour les hommes : p-value > 0.05
Test de student : 
Sert à comparer les moyennes
Mais la moyenne est paramètre d'une loi normale, or la distribution des femmes ne suit pas une loi normale.
> t.test(d.f, d.h, var.equal=T)
        Two Sample t-test
data:  d.f and d.h
t = -21.639, df = 406, p-value < 2.2e-16
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -15.13257 -12.61211
sample estimates:
mean of x mean of y 
 165.5755  179.4479 
 p-value < 0.05 (probabilité que l'écart entre les 2 populations soit due au hasard)
 Donc il est peu probable car p-value < 0.05.
Test var.test(d.h, d.f) : 
> var.test(d.h, d.f)
        F test to compare two variances
data:  d.h and d.f
F = 1.276, num df = 162, denom df = 244, p-value = 0.08541
alternative hypothesis: true ratio of variances is not equal to 1
95 percent confidence interval:
 0.9666089 1.6981920
sample estimates:
ratio of variances 
          1.276015 
les variances sont acceptablement homongenes
Test de wilcox :
wilcox.test(d.f, d.h)
C'est un test de rang : Il faut ranger dans l'ordre croissant les tailles puis on attribut des rangs de 1 a n à ces tailles.
      Wilcoxon rank sum test with continuity correction
data:  d.f and d.h
W = 2278.5, p-value < 2.2e-16
alternative hypothesis: true location shift is not equal to 0
on a p-value < 0.05
Donc peu probable que l'ecart des rang est du au hasard
Donc il y a un ecart des rangs significatifs entre les hommes et les femmes.
TEST UNILATERAL : 
On determine une hypothèse alternative qui se traduit en hypothèse d'égalité.
Hyp1 : MoyF < MoyH --> ce que je veux montrer
Hyp0 : 
Exemple : t.test(d.f, d.h, var.equal=T, alternative="less")
d.f
d.h
chi
chisq
d
sample(d, 50)
sample(d$sexe, 50)
sample(d$Sexe, 50)
d.s
summarty(d.s)
summary(d.s)
e
e <- d[, c(7,14)]
e <- na.omit(e)
head(e)
e%Pointure <- cut(d%Pointure, breaks-c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e%Pointure <- cut(e%Pointure, breaks-c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e$Pointure <- cut(e%Pointure, breaks-c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e$Pointure <- cut(e$Pointure, breaks-c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e$Pointure <- cut(e$Pointure, breaks=c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e$Ecartement_Orbital <- cut(e$Ecartement_Orbital, breaks=c(-Inf, 6.271, +Inf), labels=c('-', '+'))
head(e, 3)
head(e, 6)
chisq.test(e$Pointure, e$Ecartement_Orbital)
sample(1:300, 10)
d.s
d.s.indice <- sample(1:285, 63)
d.s
6666666
55
5555885
5135145654654654
848448
111211221
0202
01210.2
d.s
table(d.s)
table(e)
table(e)
p
p <- vector(mode = "numeric")
for(i in 1:200){
exit
quit
bye
}
e
d.s
for(i in 1:200){
e <- d[ sample(1:285,100),]
test <- chisq.test(e$Pointure, e$Ecartement_Orbital)
p[i] <- test$p.value
}
warnings()
hist(p, nclass = 100)
p <- vector(mode = "numeric")
for(i in 1:200){
d.s <- d[ sample(1:285,100),]
test <- chisq.test(d.s$Pointure, d.s$Ecartement_Orbital)
p[i] <- test$p.value
}
hist(p, nclass = 100)
d.s
d.s
e
d.s
e
e
p <- vector(mode = "numeric")
for(i in 1:200){
d.s <- d[ sample(1:285,100),]
test <- chisq.test(d.s$Pointure, d.s$Ecartement_Orbital)
p[i] <- test$p.value
}
hist(p, nclass = 100)
hist(p, nclass = 20)
length(p[p<0.05])
38/100
*100
38/200*100
p <- vector(mode = "numeric")
for(i in 1:200){
d.s <- d[ sample(1:285,100),]
test <- chisq.test(d.s$Pointure, d.s$Ecartement_Orbital)
p[i] <- test$p.value
}
hist(p, nclass = 20)
length(p[p<0.05])
length(p[p<0.01])
length(p[p<0.5])
length(p[p<0.05])
d.s
p <- vector(mode = "numeric")
for(i in 1:200){
d.s <- d[ sample(1:285,100),]
test <- chisq.test(d.s$Pointure, d.s$Ecartement_Orbital)
p[i] <- test$p.value
}
hist(p, nclass = 20)
length(p[p<0.05])
d.s <- d[ sample(1:285,285), replace=T]
d.s <- d[ sample(1:285,285), replace=T,]
d.s]
d.s
e
head(d.s, 15)
d.s$Pointure
e$Pointure <- cut(e$Pointure, breaks=c(-Inf, 39, 41, +Inf), labels=c('p', 'm', 'g'))
e$Ecartement_Orbital <- cut(e$Ecartement_Orbital, breaks=c(-Inf, 6.271, +Inf), labels=c('-', '+'))
d
e
e
e
e
e
e$Pointure
p <- vector(mode="numeric")
for(i in 1:10000){
e <- sample(1:285,285, replace=T),]
for(i in 1:10000){
e <- d[ sample(1:285,285, replace=T),]
test <- chisq.test(e$Pointure, e$Ecartement_Orbital)
p[i] <- test$p.value
}
hist(p, 20)
hist(p, nclass=100)
hist(p, nclass=20)
length(p[p<0.05])
9978/10000*100
e
e$Taille_en_cm
e <- d[, c(6,7)]
e <- na.omit(e)
e
e <- d[d$Sexe=="H", c(6,7)]
e
e <- na.omit(e)
e
length(e)
e$Pointure <- cut(e$Pointure, breaks=c(-Inf, 42, 45, +Inf), labels=c('p', 'm', 'g'))
e$Ecartement_Orbital <- cut(e$Ecartement_Orbital, breaks=c(-Inf, 180, +Inf), labels=c('-', '+'))
e$Taille_en_cm <- cut(e$Taille_en_cm, breaks=c(-Inf, 180, +Inf), labels=c('-', '+'))
head(e, 10)
chisq.test(e$Pointure, e$Taille_en_cm)
e
length(e)
> p <- vector(mode = "numeric")
> for(i in 1:200){
+ e <- d[ sample(1:285,100),]
+ test <- chisq.test(e$Pointure, e$Taille_en_cm)
+ p[i] <- test$p.value
p <- vector(mode = "numeric")
for(i in 1:200){
e <- d[ sample(1:285,100),]
test <- chisq.test(e$Pointure, e$Taille_en_cm)
p[i] <- test$p.value
}
hist(p, nclass = 20)
length(p[p<0.05])
e
e$Pointure
e <- d[, c(6,7)]
e <- na.omit(e)
e$Pointure <- cut(e$Pointure, breaks=c(-Inf, 42, 45, +Inf), labels=c('p', 'm', 'g'))
e$Taille_en_cm <- cut(e$Taille_en_cm, breaks=c(-Inf, 180, +Inf), labels=c('-', '+'))
e$Pointure
head(d.s, 15)
head(e, 15)
e
e <- d[d$Sexe=="H", c(6,7)]
e <- na.omit(e)
e
e$Pointure <- cut(e$Pointure, breaks=c(-Inf, 42, 45, +Inf), labels=c('p', 'm', 'g'))
e$Taille_en_cm <- cut(e$Taille_en_cm, breaks=c(-Inf, 180, +Inf), labels=c('petit', 'grand'))
e
save.image("F:\\tisRepo\\COURS DISTANCIEL\\MSS\\TP.RData")
